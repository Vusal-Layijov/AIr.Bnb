[{"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/index.js":"1","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/App.js":"2","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/index.js":"3","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/csrf.js":"4","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/session.js":"5","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Navigation/index.js":"6","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"7","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/context/Modal.js":"8","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/OpenModalButton/index.js":"9","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/LoginFormModal/index.js":"10","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SignupFormModal/index.js":"11","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/Image/Image.js":"12","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/spots.js":"13","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/AllSpotsDetails/index.js":"14","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SetOneSpot/setOneSpot.js":"15","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SpotReviews/SpotReviews.js":"16","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/review.js":"17","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/CreateNewSpot/CreateNewSpot.js":"18","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ManageSpots/index.js":"19","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/UpdateSpot/UpdateSpot.js":"20","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ManageSpots/DeleteSpot.js":"21","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ReviewModal/index.js":"22","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/DeleteReview/DeleteReview.js":"23","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/CreateBookings/index.js":"24","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/bookings.js":"25","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/DeleteBooking/index.js":"26","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/UpdateReview/index.js":"27","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Map/index.js":"28","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/PageNotFound/index.js":"29","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Footer/index.js":"30","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/AboutAirWe/index.js":"31","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SetOneSpot/ImageGallery.js":"32","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/utils/mainutils.js":"33","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/context/search.js":"34","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/FilterSpots/index.js":"35","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/FilterSpots/FilteredSpots.js":"36"},{"size":1063,"mtime":1686289183912,"results":"37","hashOfConfig":"38"},{"size":2170,"mtime":1687670705464,"results":"39","hashOfConfig":"38"},{"size":899,"mtime":1681779122022,"results":"40","hashOfConfig":"38"},{"size":1207,"mtime":1676161978160,"results":"41","hashOfConfig":"38"},{"size":2024,"mtime":1676161978160,"results":"42","hashOfConfig":"38"},{"size":2167,"mtime":1687670973596,"results":"43","hashOfConfig":"38"},{"size":3412,"mtime":1681937601163,"results":"44","hashOfConfig":"38"},{"size":2009,"mtime":1676161978159,"results":"45","hashOfConfig":"38"},{"size":856,"mtime":1682545160095,"results":"46","hashOfConfig":"38"},{"size":2704,"mtime":1676870246182,"results":"47","hashOfConfig":"38"},{"size":3891,"mtime":1676836334983,"results":"48","hashOfConfig":"38"},{"size":174,"mtime":1687154195101,"results":"49","hashOfConfig":"38"},{"size":7722,"mtime":1686461806337,"results":"50","hashOfConfig":"38"},{"size":1457,"mtime":1687411950603,"results":"51","hashOfConfig":"38"},{"size":4589,"mtime":1684300753387,"results":"52","hashOfConfig":"38"},{"size":2053,"mtime":1682441715322,"results":"53","hashOfConfig":"38"},{"size":3095,"mtime":1682038281493,"results":"54","hashOfConfig":"38"},{"size":11980,"mtime":1684907224828,"results":"55","hashOfConfig":"38"},{"size":4097,"mtime":1682545150687,"results":"56","hashOfConfig":"38"},{"size":15866,"mtime":1685761435745,"results":"57","hashOfConfig":"38"},{"size":805,"mtime":1676782847019,"results":"58","hashOfConfig":"38"},{"size":4223,"mtime":1682098212712,"results":"59","hashOfConfig":"38"},{"size":1168,"mtime":1676610239756,"results":"60","hashOfConfig":"38"},{"size":4477,"mtime":1682385583897,"results":"61","hashOfConfig":"38"},{"size":2196,"mtime":1681969216365,"results":"62","hashOfConfig":"38"},{"size":860,"mtime":1681962391561,"results":"63","hashOfConfig":"38"},{"size":5043,"mtime":1682097905840,"results":"64","hashOfConfig":"38"},{"size":7820,"mtime":1687584274713,"results":"65","hashOfConfig":"38"},{"size":454,"mtime":1682360330514,"results":"66","hashOfConfig":"38"},{"size":863,"mtime":1687671103338,"results":"67","hashOfConfig":"38"},{"size":732,"mtime":1682363757468,"results":"68","hashOfConfig":"38"},{"size":608,"mtime":1684644471739,"results":"69","hashOfConfig":"38"},{"size":261,"mtime":1685315438316,"results":"70","hashOfConfig":"38"},{"size":532,"mtime":1686289102679,"results":"71","hashOfConfig":"38"},{"size":1197,"mtime":1687500283288,"results":"72","hashOfConfig":"38"},{"size":1258,"mtime":1687586942996,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11y3x7z",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"83"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"83"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/App.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/index.js",[],[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/csrf.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/session.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Navigation/index.js",["196","197","198","199","200","201"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/context/Modal.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/OpenModalButton/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/LoginFormModal/index.js",["202"],[],"import React, { useEffect, useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./LoginForm.css\";\nfunction LoginFormModal() {\n    const dispatch = useDispatch();\n    const [credential, setCredential] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const { closeModal } = useModal();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .then(closeModal)\n            .catch(\n                async (res) => {\n                    const data = await res.json();\n                    if (data && data.errors) setErrors(data.errors);\n                }\n            );\n    };\n\n    const handleDemoSubmit = (e) => {\n       // e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential:\"Demo-lition\", password:'password' }))\n            .then(closeModal)\n            .catch(\n                async (res) => {\n                    const data = await res.json();\n                    if (data && data.errors) setErrors(data.errors);\n                }\n            );\n    };\n\n\n\n\n    return (\n        <div className=\"loginsonmodal\">\n            <div><h1>Log In</h1></div>\n            <form onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map((error, idx) => (\n                        <li style={{color:'red'}} key={idx}>{error}</li>\n                    ))}\n                </ul>\n                <label>\n                   \n                    <input\n                        type=\"text\"\n                        value={credential}\n                        onChange={(e) => setCredential(e.target.value)}\n                        required\n                        placeholder=\"Username or Email\"\n                    />\n                </label>\n                <label>\n                    \n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                        placeholder=\"Password\"\n                    />\n                </label>\n                <button className=\"forSubmit\" type=\"submit\" disabled={(password.length < 6 || credential.length < 4) ? true:false}>Log In</button>\n            </form>\n            <div>\n            <button className=\"demoSubmit\"  onClick={()=> handleDemoSubmit()}>Demo User</button>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginFormModal;","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SignupFormModal/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/Image/Image.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/spots.js",["203","204"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/AllSpotsDetails/index.js",["205","206","207","208","209"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SetOneSpot/setOneSpot.js",["210","211","212","213","214","215","216"],[],"import React, {useEffect} from 'react';\nimport { NavLink, useParams,} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAllSpots } from '../../store/spots';\nimport SpotReviews from '../SpotReviews/SpotReviews';\nimport { Route } from 'react-router-dom';\nimport { reviewMakerFunc } from '../../store/review';\nimport './SetOneSpot.css'\nimport { setOneSpotDetails } from '../../store/spots';\nimport OpenModalButton from '../OpenModalButton';\nimport ReviewModal from '../ReviewModal';\nimport Map from '../Map';\nimport SpotsMap from '../Map';\nimport ImageGallery from './ImageGallery';\nfunction SetOneSPot () {\n  const { spotId } = useParams()\n  let user = useSelector(state =>state.session.user);\n\n  const spotReviews = useSelector(state =>  state.reviews.spot)\n  const singleSpot =useSelector (state => state.spots.singleSpot)\n  const spots = useSelector(state => Object.values(state.spots.allSpots))\n\n    const dispatch = useDispatch()\n \n  // useEffect(() => {\n  //   dispatch(setAllSpots())\n  // }, [])\n  useEffect(() => {\n    dispatch(setOneSpotDetails(Number(spotId)))\n    dispatch(reviewMakerFunc(spotId))\n    dispatch(setAllSpots())\n  },[dispatch] )  \n  // useEffect(() => {\n    \n  // }, [])\n\n  // if (!spot) {\n  //   return null\n  // // }\n  // if (spot === undefined){\n  //   return null\n  // }\n  if(!singleSpot.Owner){\n    return null\n  }\n  if (spotReviews.id === null) {\n    return null;\n  }\n  let spotReviewsArr = Object.values(spotReviews);\n  if (!user) {\n    user = { id: 0 }\n  }\n  let noReviewYet = true\n  if (spotReviewsArr.length > 0) {\n    spotReviewsArr.forEach(review => {\n      if (review.User?.id === user?.id) noReviewYet = false;\n    });\n  }\n // <div>{singleSpot.avgstarrating}⭐️ . {singleSpot.numReviews} reviews</div>\n  let toCheck = singleSpot.Owner.id == user.id\n\n    return (\n    <>  \n \n      <div className='mainDiv'>\n       <h1>{singleSpot.name}</h1>\n       <h2>{singleSpot.city}, {singleSpot.state}, {singleSpot.country}</h2>\n          {/* <div className='mapImage' >\n          <img src={singleSpot.SpotImages[0].url} style={{ width: '650px', height: '550px', marginLeft :'2px'}} ></img>\n          <SpotsMap spots={spots} />\n          </div> */}\n          <ImageGallery images={singleSpot.SpotImages} spots={spots} />\n        <div>Hosted by {singleSpot.Owner.firstName} {singleSpot.Owner.lastName} </div>\n        <div className='underHost'>\n          <div>{singleSpot.description}</div>\n          <div className='upperReserveButton'>\n            <div className='underHost'>\n              \n                <div>\n                {`＄${singleSpot.price}  night`}\n                </div>\n                <div>   {!singleSpot.numReviews\n                  ? \"★  New\"\n                  : `★ ${parseFloat(singleSpot.avgstarrating).toFixed(1)} •`} {\" \"}\n                  {singleSpot.numReviews == 0 ? '' :\n                   `${singleSpot.numReviews}  Review`}\n                  {singleSpot.numReviews > 1 ? \"s\" : null}\n                </div>\n            </div>\n            <div className='forReserve'>\n                <NavLink to={`/spots/${spotId}/bookings/new`} > <button className='forButton' >Reserve</button></NavLink>\n            </div>\n          </div>\n        </div>\n        <br></br>\n          <div className='forBreak' >\n            <h2 >\n              <span>\n                ★ \n                {!singleSpot.numReviews\n                  ? \" New\"\n                  : `${parseFloat(singleSpot.avgstarrating).toFixed(1) } rating • `}\n                {singleSpot.numReviews == 0 ? '' :\n                  `${singleSpot.numReviews}  Review`}\n                {singleSpot.numReviews > 1 ? \"s\" : ''}\n              </span>\n            </h2>\n\n\n            <div style={{margin:'2px'}}>\n              {toCheck === false && user.id !== 0 && noReviewYet ? (\n                <OpenModalButton\n                  buttonText=\"Post Your Review\"\n                  modalComponent={<ReviewModal spotId={spotId} />}\n                />\n              ) : null}\n            </div>\n           \n            <div style={{ marginBottom: '20px' }}>\n              {spotReviewsArr &&\n                spotReviewsArr.map((review) => <SpotReviews review={review} user={user} spotId={spotId} />)}\n            </div>\n            <div style={{marginBottom:'20px'}}>\n              {toCheck === false && user.id !== 0 && noReviewYet && spotReviewsArr.length === 0 ? (\n                <h2>Be the first to post a review!</h2>\n              ) : null}\n            </div>\n          </div>\n      </div>\n      </>  \n    );\n}\n\nexport default SetOneSPot;\n","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SpotReviews/SpotReviews.js",["217","218","219","220","221","222"],[],"import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { reviewMakerFunc } from '../../store/review'\nimport DeleteReview from '../DeleteReview/DeleteReview'\nimport OpenModalButton from '../OpenModalButton'\nimport './SpotReviews.css'\nimport UpdateReview from '../UpdateReview'\nexport default function SpotReviews({review, user, spotId}) {\n    const dispatch = useDispatch()\n  //  console.log('review from spotrewies', reviews)\n  //  let mapreviews = Object.values(reviews)\n  //  let filtered = mapreviews.filter(son => son.spotId == spotId)\n   // console.log('setting new review', review)\n    // useEffect(() =>{\n    //     dispatch(reviewMakerFunc(spotId))\n    // }, [dispatch])\n    // if(!reviews) {\n    //     return null\n    // }\n  //{\n  //   filtered.map((review) => (\n  //     <>\n  //       <h2>{review.User.firstName}</h2>\n  //       <h3>{review.createdAt}</h3>\n  //       <p>{review.review}</p>\n  //     </>\n  //   ))\n\n  // }\n  let gun = review.createdAt\n  let gunParsed = Date.parse(gun)\n  let obj = new Date (gunParsed)\n  \n  let newdate = obj.toString()\n  let vaxtarr = newdate.split(' ')\n  let month = vaxtarr[1]\n  let sonGun = vaxtarr[2]\n  let il = vaxtarr[3]\n  let toCheck = user.id == review.userId\n  if(!review) return null\n  return (\n    <div style={{marginTop:'10px'}}>\n      <h3>{review.User?.firstName}</h3>\n      <h4>{`${il}-${month}-${sonGun}`}</h4>\n      <p>{review.review}</p>\n      <div style={{ marginTop: '10px' }}>\n        {toCheck ? (\n        <div className='deleteupdate'>\n          <div >\n              <OpenModalButton\n                buttonText=\"Update\"\n                modalComponent={<UpdateReview oldReview={review} spotId={spotId} />}\n              />\n          </div>\n          <div>\n              <OpenModalButton\n                buttonText=\"Delete\"\n                modalComponent={<DeleteReview spotId={spotId} review={review} />}\n              />\n          </div>\n        </div>\n        ) : null\n\n        }\n      </div>\n    </div>\n  )\n}\n","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/review.js",["223","224"],[],"import { csrfFetch } from \"./csrf\"\nconst GET_SPOT_REVIEWS = 'reviews/GET_REVIEW'\nconst ADD_NEW_REVIEW = 'reviews/ADD_NEW_REVIEW'\nconst REMOVE_REVIEW = 'reviews/REMOVE_REVIEW'\nconst EDIT_REVIEW = 'reviews/EDIT_REVIEW'\nconst reviewMaker = (payload) =>{\n    return {\n        type:GET_SPOT_REVIEWS,\n        payload:payload\n    }\n}\nconst reviewAdder = payload => ({\n    type: ADD_NEW_REVIEW,\n    payload\n}) \n\nconst removeReview = (payload) =>{\n    return {\n        type: REMOVE_REVIEW,\n        payload\n}\n}\n\n\nexport const reviewMakerFunc = (spotId) => async dispatch => {\n    const response = await csrfFetch(`/api/spots/${spotId}/reviews`)\n    const data = await response.json()\n    dispatch(reviewMaker(data))\n    return response\n}\nexport const reviewAdderFunc = (newReview, spotId) => async dispatch => {\n    console.log(\"reached addNewReview Thunk\")\n    const response = await csrfFetch(`/api/spots/${spotId}/reviews`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newReview),\n    });\n\n    if (response.ok) {\n        const data = await response.json();\n        dispatch(reviewAdder(data));\n\n        return data;\n    }\n}\n\nexport const removeReviewFunc  = (reviewId) => async dispatch =>{\n    const response = await csrfFetch(`/api/reviews/${reviewId}`, {\n        method: \"DELETE\",\n    });\n    if (response.ok) {\n        // console.log(\"reached response.ok\")\n        const details = await response.json();\n        // console.log(\"details from inside thunk\", details)\n        dispatch(removeReview(reviewId));\n    }\n}\n\nexport  const edit_review_thunk = (id, review) => async dispatch =>{\n    const response = await csrfFetch(`/api/reviews/${id}`,{\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(review)\n    })\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(reviewAdder(data))\n        return data\n    }\n}\n\nconst initialState = {spot:{}, user:{}}\nconst reviewReducer = (state = initialState, action) =>{\n    let newState;\n    switch (action.type) {\n        case GET_SPOT_REVIEWS:\n            let normalized = {}\n            action.payload.Reviews.forEach(review => {\n                normalized[review.id] = review\n            });\n            newState = {...state, spot:normalized}\n            return newState   \n            \n        case ADD_NEW_REVIEW:\n          //  newState = {...state, spot:{...state.spot, ...action.payload}}\n        \n            let spot = state.spot\n            spot[action.payload.id] = { ...action.payload }\n            newState = {\n                ...state,\n                spot\n            }\n            \n            return newState\n            case REMOVE_REVIEW:\n                newState ={...state}\n                delete newState.spot[action.payload]\n                let result = {\n                    ...newState,\n                    spot:{...newState.spot}\n                }\n                return result\n        default:\n            return state\n    }\n}\nexport default reviewReducer","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/CreateNewSpot/CreateNewSpot.js",["225","226","227","228","229"],[],"import React, {useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createSpotFunc } from '../../store/spots';\nimport { useHistory } from 'react-router-dom';\nimport './NewSpot.css'\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from 'react-places-autocomplete';\nconst libraries = ['places']\nexport default function CreateNewSpot() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [country, setCountry] = useState('')\n  const [address, setAddress] = useState('')\n  const [city, setCity] = useState('')\n  const [state, setState] = useState('')\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [price, setPrice] = useState('')\n  const [image, setImage] =useState('')\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [validationErrors, setValidationErrors] = useState([]);\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [image1, setImage1]=useState('')\n  const [image2, setImage2] = useState('')\n  const [image3,setImage3] = useState('')\n\n  const updateCountry = (e) => setCountry(e.target.value);\n  const updateAddress = (e) => setAddress(e.target.value);\n  const updateCity = (e) => setCity(e.target.value);\n  const updateState = (e) => setState(e.target.value);\n  const updateTitle = (e) => setTitle(e.target.value);\n  const updateDescription = (e) => setDescription(e.target.value);\n  const updatePrice = (e) => setPrice(e.target.value);\n  const updateImage = (e) => setImage(e.target.value)\n    \n  useEffect(() => {\n    let errors = [];\n\n    //errors to push\n    if (country.length === 0) {\n      errors.push(\"Country is required\");\n    }\n    if (address.length === 0) {\n      errors.push(\"Address is required\");\n    }\n    if (city.length === 0) {\n      errors.push(\"City is required\");\n    }\n    if (state.length === 0) {\n      errors.push( \"State is required\");\n    }\n\n    if (description.length < 30) {\n      errors.push(\"Description needs a minimum of 30 characters\");\n    }\n    if (title.length === 0) {\n      errors.push(\"Name is required\");\n    }\n    if (price.length === 0) {\n      errors.push( \"Price is required\");\n    }\n    if (image.length === 0) {\n      errors.push(\"First image is required\");\n    }\n    if (!address) {\n      errors.push('Address is required')\n    }\n\n    \n\n    setValidationErrors (errors);\n  }, [country, address, city, state,description, title, price,image]);\n\n  const {isLoaded} = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries:libraries\n  })\n  const handleSelect = async address =>{\n    setAddress(() => address)\n    const results = await geocodeByAddress(address)\n    const latlng = await getLatLng(results[0])\n    const addressArr = results[0].formatted_address.split(',').map(el =>el.trim())\n    setAddress(() => addressArr[0])\n    setCity(() => addressArr[1])\n    setState(() => addressArr[2].split(' ')[0])\n    setCountry(()=>addressArr[3])\n    setLatitude(() => latlng.lat)\n    setLongitude(() => latlng.lng)\n  }\n\n  const handleSubmit = async (e) =>{\n    e.preventDefault()\n    setHasSubmitted(true);\n    if (validationErrors.length) return\n    const spot = {\n      address:address,\n      city:city,\n      state:state,\n      lat: +latitude,\n      lng: +longitude,\n      country:country,\n      name:title,\n      description:description,\n      price:price,\n    }\n    const images ={\n      preview:image,\n      others:[image1,image2,image3]\n    }\n\n    \n    let createdSpotId  = await dispatch(createSpotFunc(spot,images))\n    if (createdSpotId) {\n      history.push(`/spots/${createdSpotId}`);\n      \n    }\n    setCountry('')\n    setAddress('')\n    setCity('')\n    setState('')\n    setTitle('')\n    setDescription('')\n    setPrice('')\n    setImage('')\n    setLatitude('')\n    setLongitude('')\n    setImage1('')\n    setImage2('')\n    setImage3('')\n    setHasSubmitted(false);\n  }\n  if (!isLoaded) return (<div>Loading...</div>)\n  return (\n    <div className='top' >\n \n      <form className=\"top-down\" onSubmit={handleSubmit} >\n        <h2>Create a new Spot</h2>\n        <h3>Where's you place located?</h3>\n        <p>Guests will only get your exact address once they booked a reservation</p>\n        {hasSubmitted && validationErrors.length > 0 && (\n          <div>\n            The following errors were found:\n            <ul>\n              {validationErrors.map(error => (\n                <li style={{color:'red'}} key={error}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <label>\n          Street Address{\" \"}\n\n          <PlacesAutocomplete\n            value={address}\n            onChange={setAddress}\n            onSelect={handleSelect}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <label className='autocomplete-label'>\n                {/* <div>\n                  Street Address {(hasSubmitted && validationErrors.address.length) ? <p className='form-error'>{validationErrors.address}</p> : (<></>)}\n                </div> */}\n                <input\n                  {...getInputProps({\n                    placeholder: 'Address',\n                    className: 'location-search-input',\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {!loading && suggestions.map(suggestion => {\n                    const className = 'suggestion-item'\n                    //   const className = suggestion.active\n                    //   ? 'suggestion-item--active'\n                    //   : 'suggestion-item';\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                      : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                      <div className='auto-dropdown'\n                        {...getSuggestionItemProps(suggestion, {\n                          className,\n                          style,\n                        })}\n                      >\n                        <span>{suggestion.description}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n\n              </label>\n            )}\n          </PlacesAutocomplete>\n        </label>\n        <label>\n          Country{\" \"}\n          <input\n            type=\"text\"\n            name=\"country\"\n            value={country}\n            placeholder=\"Country\"\n            onChange={updateCountry}\n          />\n        </label>\n        <div className=\"formDown\">\n          <div>\n            <div className='got'>\n            <label>\n            City \n            <input\n              type=\"text\"\n              name=\"city\"\n              value={city}\n              placeholder=\"City\"\n              onChange={updateCity}\n            />\n           </label>\n           </div>\n           <div className='got2'>\n           {/* <label>\n                Latitude{\" \"}\n\n                <input\n                  type=\"text\"\n                  name=\"latitude\"\n                  value={latitude}\n                  placeholder=\"Latitude\"\n                  onChange={(e) => setLatitude(e.target.value)}\n                />\n           </label> */}\n           </div>\n          </div>\n          <div>\n         <div >\n          <label>\n       \n\n                State{\" \"}\n\n                <input\n                  type=\"text\"\n                  name=\"state\"\n                  value={state}\n                  placeholder=\"State\"\n                  onChange={updateState}\n                />\n\n          </label>\n          </div>\n          <div>\n          {/* <label>\n            Longitude{\" \"}\n           \n            <input\n              type=\"text\"\n              name=\"longitude\"\n              value={longitude}\n              placeholder=\"Longitude\"\n              onChange={(e) => setLongitude(e.target.value)}\n            />\n          </label> */}\n          </div>\n          </div>\n        </div>\n        <label for=\"description\">\n          <h3>Describe your place to guests:</h3>\n          <p>\n            Mention the best features of your space, any special amentities\n            like fast wifi or parking, and what you love about the\n            neighborhood.\n          </p>\n          <textarea\n            name=\"description\"\n            id=\"description\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Please write at least 30 characters\"\n            onChange={updateDescription}\n          >\n          </textarea>\n        </label>\n        <p>\n         \n        </p>\n        <label>\n          <h3>Create a title for your spot</h3>\n          <p>\n            Catch guests' attention with a spot title that highlights what\n            makes your place special.\n          </p>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            placeholder=\"Name of your spot\"\n            onChange={updateTitle}\n          />\n        </label>\n       \n        <label>\n          <h3>Set a base price for your spot</h3>\n          <p>\n            Competitive pricing can help your listing stand out and rank\n            higher in search results.\n          </p>\n          <div className='anaDiv'>\n            <div>＄</div>\n            <div className='underanaDiv'>\n           <input\n            type=\"text\"\n            name=\"price\"\n            value={price}\n            placeholder=\"Price per night (USD)\"\n            onChange={updatePrice}\n              />\n            </div>\n          </div>\n        </label>\n       \n        \n          <h3>Liven up your spot with photos</h3>          \n          <input\n            type=\"text\"\n            name=\"previewPhoto\"\n            placeholder=\"First image url\"\n            value={image}\n            onChange={(e)=>setImage(e.target.value)}\n          />\n          \n        \n        <input\n          type=\"text\"\n          value={image1}\n          name='image1'\n          placeholder=\"Second image url\"\n          onChange={(e) => setImage1(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={image2}\n          name='image2'\n          placeholder=\"Third image url\"\n          onChange={(e) => setImage2(e.target.value)}\n        />\n        <input\n        type='text'\n        value={image3}\n        name='image3'\n        placeholder=\"Fourth image url\"\n        onChange={(e) => setImage3(e.target.value)}\n         />\n        {/* <label>\n          <input\n            type=\"text\"\n            name=\"photo1\"\n            value=''\n            placeholder=\"Image URL\"\n            onChange={(e) => alert('This future is coming, you can add preview image for now!!')}\n          />\n        </label>\n        <label>\n          <input\n            type=\"text\"\n            name=\"photo2\"\n            value=''\n            placeholder=\"Image URL\"\n            onChange={(e) => alert('This future is coming, you can add preview image for now!!')}\n          />\n        </label>\n        <label>\n          <input\n            type=\"text\"\n            name=\"photo3\"\n            value=''\n            placeholder=\"Image URL\"\n            onChange={(e) => alert('This future is coming, you can add preview image for now!!')}\n          />\n        </label>\n        <label>\n          <input\n            type=\"text\"\n            name=\"photo4\"\n            value=''\n            placeholder=\"Image URL\"\n            onChange={(e) => alert('This future is coming, you can add preview image for now!!')}\n          />\n        </label>\n        <br /> */}\n        <div className='got2'>\n        <button className=\"subButton\" type=\"submit\">\n          Create Spot\n        </button>\n        </div>\n      </form>\n    </div>\n  )\n}","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ManageSpots/index.js",["230","231","232","233","234"],[],"import React from 'react'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink, Route, useParams } from 'react-router-dom';\nimport { setCurrentUserSpotsFunc } from '../../store/spots';\nimport './index.css'\nimport { removeSpotFunc } from '../../store/spots';\nimport OpenModalButton from '../OpenModalButton';\nimport DeleteSpot from './DeleteSpot';\nimport { get_booking_thunk } from '../../store/bookings';\nimport DeleteBooking from '../DeleteBooking';\n\nexport default function ManageSpots() {\n    \n    const dispatch = useDispatch()\n    const spots = useSelector(state => Object.values(state.spots.allSpots))\n\n    const bookings = useSelector(state => Object.values(state.bookings.user))\n    console.log(bookings)\n\n    useEffect(() =>{\n        dispatch(setCurrentUserSpotsFunc())\n        dispatch(get_booking_thunk())\n    },[dispatch])\n    if (!spots || !bookings) {\n        return null\n    }\n   // <button onClick={() => dispatch(removeSpotFunc(spot.id))} >Delete</button>\n   // console.log('current user spots', spots)\n  return (\n    <>\n    <div className='basGot'>\n      <h1>Manage Your Spots</h1>\n          <NavLink to={'/spots/new'} > <button className='navlinkBut' >Create a New Spot</button></NavLink> \n      <div className='forfirst'>\n          {spots.map((spot) => {\n              return (\n                  <nav key={spot.id} className='forNewDiv'>\n                      <div className='forNav' >\n                          <div >\n                              <div className='spotClass' >\n                                  <img src={spot.previewImage} className='forImage'></img>\n                              </div>\n                              <div className='forInside'>\n                                  <div>{spot.city}, {spot.state}</div>\n                                  <div>{spot.avgRating ? `⭐️ ${parseFloat(spot.avgRating).toFixed(1)}` : '⭐️ New'}</div>\n                              </div>\n                              <div className='forInside'>\n                                  <div>${spot.price} night</div>\n                                  <NavLink to={`/spots/${spot.id}/edit`}><button className='forButStyle' >Update</button></NavLink> \n                                  <div ><OpenModalButton buttonText=\"Delete\" modalComponent={<DeleteSpot spotId={spot.id} />}/></div>\n                              </div>\n                          </div>\n                      </div>\n                  </nav>\n              )\n          })}\n      </div> \n    </div>\n    <div className='basGot' >\n              <h1>Manage Your Bookings</h1>\n              <NavLink to={'/'} > <button className='navlinkBut' >Create a New Booking</button></NavLink>\n              <div className='forfirst' > \n              {bookings.map((booking) => {\n                  return (\n                      <div className='forNewDiv' key={booking.id} >\n                            <div className='nameDelete' >\n                                 <p style={{ fontWeight: 'bold' }} >At: {booking.Spot.name}</p>\n                                 <div><OpenModalButton className={'default-button curs rd-bg'} buttonText={<i class=\"fas fa-trash-alt\"></i>} modalComponent={<DeleteBooking bookingId={booking.id} />} /></div>\n\n                            </div>\n                          <p>Date: {new Date(booking.startDate).toISOString().slice(0, 10)} - {new Date(booking.endDate).toISOString().slice(0, 10)}</p>\n                          {/* <p className=\"forDesc\" >Special notes: {booking.notes}</p> */}\n                          <div className='spotClass' >\n                              <img src={booking.Spot.previewImage} className='forImage'></img>\n                          </div>\n                          {/* <div className=\"forbook\" >\n                              <NavLink to={`/bookings/${booking.id}/edit`} > <button className=\"globalmodal\" >Update</button> </NavLink>\n\n                          </div> */}\n                      </div>\n\n                  )\n              })\n\n              }\n              </div>\n    </div>\n    </>   \n  )\n}\n","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/UpdateSpot/UpdateSpot.js",["235","236","237","238","239","240","241","242","243","244","245","246","247"],[],"import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { updateSpotFunc } from '../../store/spots';\nimport { setAllSpots, setCurrentUserSpotsFunc, setOneSpotDetails } from '../../store/spots';\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    geocodeByPlaceId,\n    getLatLng,\n} from 'react-places-autocomplete';\nconst libraries = ['places']\nfunction checkFormat(obj) {\n    let values = Object.values(obj);\n    const picFormats = ['png', 'jpg', 'jpeg'];\n\n    for (let url of values) {\n        if(url['curr'].length>0){\n\n            let urlSplit = url['curr'].split('.')\n            if (!(urlSplit.length >=1 && picFormats.includes(urlSplit[urlSplit.length - 1]))) {\n                return false\n            }\n        }\n    }\n\n    return true;\n}\nexport default function UpdateSpot() {\n    const {spotId} = useParams()\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const spot = useSelector(state => state.spots.allSpots[spotId])\n    const singleSpot=useSelector(state => state.spots.singleSpot)\n    const spotImages = singleSpot.SpotImages\n    let user;\n    user = useSelector((state) => state.session.user);\n\n\n\n    let obj = {}\n   \n    obj = useSelector((state) => {\n        return state.spots.singleSpot;\n    });\n    const [images,setImages]=useState({})\n\n    useEffect(() => {\n        const stateAdd = async () => {\n            let spotInfo = await dispatch(setOneSpotDetails(spotId));\n\n            setCountry(spotInfo.country)\n            setAddress(spotInfo.address)\n            setCity(spotInfo.city)\n            setState(spotInfo.state)\n            setLatitude(spotInfo.lat);\n            setLongitude(spotInfo.lng);\n            setDescription(spotInfo.description)\n            setTitle(spotInfo.name)\n            setPrice(spotInfo.price)\n            setImage(spotInfo.SpotImages[0]?.url)\n            setImage1(spotInfo.SpotImages[1]?.url)\n            setImage2(spotInfo.SpotImages[2]?.url)\n            setImage3(spotInfo.SpotImages[3]?.url)\n            let index=1\n            let newImages = {}\n            spotInfo.SpotImages.map(img =>{\n                if(img.preview===true){\n                    newImages.previewImage = {og:img.url,curr:img.url,id:img.id}\n                }else{\n                    newImages[`image${index}`]={og:img.url,curr:img.url,id:img.id}\n                    index++\n                }\n            })\n            setImages(()=>newImages)\n        }\n        stateAdd()\n    }, [dispatch]);\n\n    // useEffect(() => {\n    //     dispatch(setCurrentUserSpotsFunc())\n    // }, [dispatch])\n      let isOwner = true\n      if(Object.keys(obj).length >0 && obj.ownerId !== user?.id) isOwner = false\n      if(isOwner === false) history.push('/')\n\n\n\n   \n    const [country, setCountry] = useState('')\n    const [address, setAddress] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [image, setImage] = useState('')\n    const [latitude, setLatitude] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    \n    const [image1, setImage1] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    const updateCountry = (e) => setCountry(e.target.value);\n    const updateAddress = (e) => setAddress(e.target.value);\n    const updateCity = (e) => setCity(e.target.value);\n    const updateState = (e) => setState(e.target.value);\n    const updateTitle = (e) => setTitle(e.target.value);\n    const updateDescription = (e) => setDescription(e.target.value);\n    const updatePrice = (e) => setPrice(e.target.value);\n    \n\n    // if (!Object.entries(obj).length > 0){\n    //     return null\n    // }\n    \n    useEffect(() => {\n        let errors = [];\n\n        //errors to push\n        if (country.length === 0) {\n            errors.push(\"Country is required\");\n        }\n        if (address.length === 0) {\n            errors.push(\"Address is required\");\n        }\n        if (city.length === 0) {\n            errors.push(\"City is required\");\n        }\n        if (state.length === 0) {\n            errors.push(\"State is required\");\n        }\n        // if (latitude.length === 0) {\n        //     errors.push(\"Latitude is required\");\n        // }\n        // if (longitude.length === 0) {\n        //     errors.push(\"Longitude is required\");\n        // }\n        if (description.length < 30) {\n            errors.push(\"Description needs a minimum of 30 characters\");\n        }\n        if (title.length === 0) {\n            errors.push(\"Name is required\");\n        }\n        if (price.length === 0) {\n            errors.push(\"Price is required\");\n        }\n        if (images.previewImage?.curr.length === 0) {\n            errors.push(\"Preview image is required\");\n        }\n        if (!checkFormat(images)){\n            errors.push('Image must be on png, jpeg or jpg format')\n        }\n\n\n        setValidationErrors(errors);\n    }, [country, address, city, state, description, title, price, images]);\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n        libraries:libraries\n    })\n    const handleSelect = async address => {\n        setAddress(() => address)\n        const results = await geocodeByAddress(address)\n        const latlng = await getLatLng(results[0])\n        const addressArr = results[0].formatted_address.split(',').map(el => el.trim())\n        setAddress(() => addressArr[0])\n        setCity(() => addressArr[1])\n        setState(() => addressArr[2].split(' ')[0])\n        setCountry(() => addressArr[3])\n        setLatitude(() => latlng.lat)\n        setLongitude(() => latlng.lng)\n    }\n    const handleImageChange = e => {\n       \n        const newImages = {...images}\n        if(newImages[e.target.name]){\n            newImages[e.target.name]={\n                ...newImages[e.target.name],\n                curr: e.target.value\n            }\n        }else{\n            newImages[e.target.name] = {\n                og: null,\n                curr: e.target.value,\n                id: null\n            }\n        }\n        setImages(()=>newImages)\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setHasSubmitted(true);\n        if (validationErrors.length) return\n        const spot = {\n            address: address,\n            city: city,\n            state: state,\n            country: country,\n            lat: latitude,\n            lng: longitude,\n            name: title,\n            description: description,\n            price: price,\n            SpotImage: image\n        }\n        console.log('consoling images sssss', images)\n       let updatedSpot = await dispatch(updateSpotFunc(spotId, spot,images))\n        \n        if (updatedSpot) {\n            history.push(`/spots/${updatedSpot.id}`);\n        }\n        setCountry('')\n        setAddress('')\n        setCity('')\n        setState('')\n        setTitle('')\n        setDescription('')\n        setPrice('')\n        setImage('')\n        setLatitude('')\n        setLongitude('')\n        setHasSubmitted(false);\n    }\n    if (!isLoaded) return (<div>Loading...</div>)\n  return (\n      <div className='top' >\n\n          <form className=\"top-down\" onSubmit={handleSubmit}>\n              <h2>Update your Spot</h2>\n              <h3>Where's you place located?</h3>\n              <p>Guests will only get your exact address once they booked a reservation.</p>\n              {hasSubmitted && validationErrors.length > 0 && (\n                  <div>\n                      The following errors were found:\n                      <ul>\n                          {validationErrors.map(error => (\n                              <li style={{ color: 'red' }} key={error}>{error}</li>\n                          ))}\n                      </ul>\n                  </div>\n              )}\n              \n              <label>\n                  Street Address{\" \"}\n\n                  <PlacesAutocomplete\n                      value={address}\n                      onChange={setAddress}\n                      onSelect={handleSelect}\n                  >\n                      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                          <label className='autocomplete-label'>\n                              {/* <div>\n                  Street Address {(hasSubmitted && validationErrors.address.length) ? <p className='form-error'>{validationErrors.address}</p> : (<></>)}\n                </div> */}\n                              <input\n                                  {...getInputProps({\n                                      placeholder: 'Address',\n                                      className: 'location-search-input',\n                                  })}\n                              />\n                              <div className=\"autocomplete-dropdown-container\">\n                                  {loading && <div>Loading...</div>}\n                                  {!loading && suggestions.map(suggestion => {\n                                      const className = 'suggestion-item'\n                                      //   const className = suggestion.active\n                                      //   ? 'suggestion-item--active'\n                                      //   : 'suggestion-item';\n                                      // inline style for demonstration purpose\n                                      const style = suggestion.active\n                                          ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                          : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                      return (\n                                          <div className='auto-dropdown'\n                                              {...getSuggestionItemProps(suggestion, {\n                                                  className,\n                                                  style,\n                                              })}\n                                          >\n                                              <span>{suggestion.description}</span>\n                                          </div>\n                                      );\n                                  })}\n                              </div>\n\n                          </label>\n                      )}\n                  </PlacesAutocomplete>\n              </label>\n              <label>\n                  Country{\" \"}\n                  <input\n                      type=\"text\"\n                      name=\"country\"\n                      value={country}\n                      placeholder=\"Country\"\n                      onChange={updateCountry}\n                  />\n              </label>\n              <div className=\"formDown\">\n                  <div>\n                      <div className='got'>\n                          <label>\n                              City\n                              <input\n                                  type=\"text\"\n                                  name=\"city\"\n                                  value={city}\n                                  placeholder=\"City\"\n                                  onChange={updateCity}\n                              />\n                          </label>\n                      </div>\n                      <div className='got2'>\n                      </div>\n                  </div>\n                  <div>\n                      <div >\n                          <label>\n\n\n                              State{\" \"}\n\n                              <input\n                                  type=\"text\"\n                                  name=\"state\"\n                                  value={state}\n                                  placeholder=\"State\"\n                                  onChange={updateState}\n                              />\n\n                          </label>\n                      </div>\n                      <div>\n                      </div>\n                  </div>\n              </div>\n              <label for=\"description\">\n                  <h3>Describe your place to guests:</h3>\n                  <p>\n                      Mention the best features of your space, any special amentities\n                      like fast wifi or parking, and what you love about the\n                      neighborhood.\n                  </p>\n                  <textarea\n                      name=\"description\"\n                      id=\"description\"\n                      cols=\"30\"\n                      rows=\"10\"\n                      placeholder=\"Please write at least 30 characters\"\n                      onChange={updateDescription}\n                      value={description}\n                  >\n                  </textarea>\n              </label>\n              <p>\n\n              </p>\n              <label>\n                  <h3>Create a title for your spot</h3>\n                  <p>\n                      Catch guests' attention with a spot title that highlights what\n                      makes your place special.\n                  </p>\n                  <input\n                      type=\"text\"\n                      name=\"title\"\n                      value={title}\n                      placeholder=\"Name of your spot\"\n                      onChange={updateTitle}\n                  />\n              </label>\n\n              <label>\n                  <h3>Set a base price for your spot</h3>\n                  <p>\n                      Competitive pricing can help your listing stand out and rank\n                      higher in search results.\n                  </p>\n                  <div className='anaDiv'>\n                      <div>＄</div>\n                      <div className='underanaDiv'>\n                          <input\n                              type=\"text\"\n                              name=\"price\"\n                              value={price}\n                              placeholder=\"Price per night (USD)\"\n                              onChange={updatePrice}\n                          />\n                      </div>\n                  </div>\n              </label>\n              <h3>Update photos</h3>\n              <label>Preview Image</label>\n              <input\n                  type=\"text\"\n                  name=\"previewImage\"\n                  placeholder=\"First image url\"\n                value={images.previewImage?.curr}\n                  onChange={handleImageChange}\n              />\n              <label>Other Images</label>\n\n              <input\n                  type=\"text\"\n                  value={images.image1?.curr}\n                  name='image1'\n                  placeholder=\"Second image url\"\n                  onChange={handleImageChange}\n              />\n              <input\n                  type=\"text\"\n                  value={images.image2?.curr}\n                  name='image2'\n                  placeholder=\"Third image url\"\n                  onChange={handleImageChange}\n              />\n              <input\n                  type='text'\n                  value={images.image3?.curr}\n                  name='image3'\n                  placeholder=\"Fourth image url\"\n                  onChange={handleImageChange}\n                />\n              <div className='got2'>\n                  <button className=\"subButton\" type=\"submit\">\n                      Update Spot\n                  </button>\n              </div>\n          </form>\n      </div>\n  )\n}\n","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ManageSpots/DeleteSpot.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/ReviewModal/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/DeleteReview/DeleteReview.js",["248","249"],[],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./DeleteReview.css\";\nimport { removeReviewFunc, reviewMakerFunc } from \"../../store/review\";\nimport { setOneSpotDetails } from \"../../store/spots\";\n\n\n\nexport default function DeleteReview({review, spotId}) {\n    const dispatch = useDispatch();\n    const { closeModal } = useModal();\n    const eventHandler = (e) =>{\n        e.preventDefault()\n        return dispatch(removeReviewFunc(review.id)).then(closeModal).then(dispatch(setOneSpotDetails(spotId)))\n    }\n    return (\n        <div className=\"sonmod\">\n            <h1>Confirm Delete</h1>\n            <p>Are you sure you want to remove this review?</p>\n\n            <button\n                onClick={eventHandler}\n                className=\"red\"\n                type=\"submit\"\n            >\n                Yes {\"(Delete Review)\"}\n            </button>\n            <button\n                onClick={() => closeModal()}\n                className=\"blk\"\n                type=\"submit\"\n            >\n                No {\"(Keep Review)\"}\n            </button>\n        </div>\n    )\n}\n","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/CreateBookings/index.js",["250","251","252","253","254","255","256","257"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport './index.css'\nimport dag from './dag.jpg'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { create_booking_thunk } from \"../../store/bookings\";\nexport default function CreateBooking(){\n    const {spotId} = useParams()\n    const dispatch = useDispatch()\n    const [paymentOption, setPaymentOption] = useState('credit card')\n    const [submitting, setSubmitting] = useState(false)\n    const [validationErrors,setValidationErrors] =useState([])\n    const history = useHistory()\n\n    \n    const [formData,setFormData] = useState({\n        startDate:null,\n        endDate:null\n    })\n\n    const handleChange=(e)=>{\n        setPaymentOption(e.target.value)\n    }\n    const handleFormChange = (event) => {\n        setFormData({...formData,[event.target.name]:event.target.value})\n    }\n    \n    const handleDateChange = (date,field) => {\n        if (date) {\n            const formattedDate = date.toISOString().slice(0, 10);\n            // console.log('bu nediiiiiii',typeof(date.toISOString().slice(0, 10)))\n            setFormData({ ...formData,[field]:date});\n        }\n\n    };\n    // const handleEndDateChange = (date) =>{\n    //     if(date){\n    //         const formattedDate = date.toISOString().slice(0,10)\n    //         setFormData({...formData,endDate:date,formattedDate})\n    //     }\n    // }\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setValidationErrors([])\n        const newBooking = {\n            startDate:formData.startDate,\n            endDate:formData.endDate\n        }\n      \n       let booked = await dispatch(create_booking_thunk(spotId,newBooking))\n        \n       .catch(\n           async (res) => {\n               const data = await res.json();\n               let errors= []\n               if (data && data.errors) {\n                \n                   setValidationErrors(data.errors);\n                   \n               }\n              \n               return\n           }\n       )\n   if(booked) history.push('/users/current')\n       \n       \n    // if(!validationErrors.length>0) history.push('/spots/current')\n\n    }\n\n    return (\n        <div className=\"forBook\">\n            <h1>AIR-WE</h1>\n            <h3>Choose date and payment options!</h3>\n            <img className=\"forBookImg\" src={dag} ></img>\n            <form className=\"create-booking-form\" onSubmit={handleSubmit} >\n                <ul>\n                    {validationErrors?.map((error, idx) => (\n                        <li style={{ color: 'red', listStyle:'none' }} key={idx}>{error}</li>\n                    ))}\n                </ul>\n                <label className=\"dateid\">\n                    Start Date:\n                    <DatePicker\n                        selected={formData.startDate}\n                        onChange={(date) => handleDateChange(date, \"startDate\")}\n                        required\n                    />\n                </label>\n                <label className=\"dateid\">\n                    End Date:\n                    <DatePicker\n                        selected={formData.endDate}\n                        onChange={(date) => handleDateChange(date, \"endDate\")}\n                        required\n                    />\n                </label>\n             \n            \n                <div className=\"forChangeB\" >\n                    <input type='radio' id='credit-card' name='payment-option' value='credit card' checked={paymentOption === 'credit card'} onChange={handleChange} />\n                    <label htmlFor='credit-card' >Credit Card</label>\n                </div>\n                <div className=\"forChangeB\" >\n                    <input type='radio' id='paypal' name='payment-option' value='paypal' checked={paymentOption === 'paypal'} onChange={handleChange} />\n                    <label htmlFor='paypal' >PayPal</label>\n                </div>\n                <div className=\"forChangeB\" >\n                    <input type='radio' id='bitcoin' name='payment-option' value='bitcoin' checked={paymentOption === 'bitcoin'} onChange={handleChange} />\n                    <label htmlFor='bitcoin' >Bitcoin</label>\n                </div>\n                <button className='membutton' onClick={handleSubmit} >Submit</button>\n            </form>\n        </div>\n    )\n}","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/store/bookings.js",["258","259"],[],"import { csrfFetch } from \"./csrf\"\nconst GET_BOOKING = 'bookings/GET_BOOKING'\nconst CREATE_BOOKING = 'bookings/CREATE_BOOKING'\nconst DELETE_BOOKING = 'bookings/DELETE_BOOKING'\n\nconst get_booking_action = (payload) => {\n    return {\n        type:GET_BOOKING,\n        payload\n    }\n}\nconst create_booking_action = (payload) =>{\n    return {\n        type: CREATE_BOOKING,\n        payload\n    }\n}\nconst delete_boking_action = (id) =>{\n    return {\n        type:DELETE_BOOKING,\n        id\n    }\n}\nexport const get_booking_thunk = () => async dispatch =>{\n    const response = await csrfFetch('/api/bookings/current')\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(get_booking_action(data))\n    }\n}\nexport const create_booking_thunk = (spotId, booking) => async dispatch => {\n    const response = await csrfFetch(`/api/spots/${spotId}/bookings`, {\n        method: \"POST\",\n        headers:{\"Content-Type\":\"application/json\"},\n        body: JSON.stringify(booking)\n    })\n    if(response.ok){\n        const data = await response.json()\n        dispatch(create_booking_thunk(data))\n    }\n    return response\n}\n\nexport const delete_booking_thunk = (id) => async (dispatch) =>{\n    const response  = await csrfFetch(`/api/bookings/${id}`,{\n        method:\"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" }\n    })\n    if (response.ok) {\n        dispatch(delete_boking_action(id))\n    }\n}\n\nconst initialState = {user:{}, spot: {}}\n\nconst bookingReducer = (state=initialState,action) =>{\n    let newState = { ...state }\n    let user = {}\n    let spot = {}\n    switch (action.type){\n        case DELETE_BOOKING:\n            delete newState.user[action.id]\n            return newState\n        case CREATE_BOOKING:\n            user=state.user\n            user[action.payload.id]=action.payload\n            return {\n                ...newState,\n                user\n            }\n        case GET_BOOKING:            \n            action.payload.Bookings.forEach(booking => user[booking.id]=booking)\n            return {\n                ...newState,\n                user\n            }\n        default:\n            return state\n    }\n}\nexport default bookingReducer","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/DeleteBooking/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/UpdateReview/index.js",["260","261","262","263"],[],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useModal } from \"../../context/Modal\";\nimport { edit_review_thunk } from \"../../store/review\";\nimport { setOneSpotDetails } from \"../../store/spots\";\nimport { reviewMakerFunc } from \"../../store/review\";\n\nexport default function UpdateReview({oldReview, spotId}) {\n    const dispatch = useDispatch()\n    const {id} = useParams()\n    const { closeModal } = useModal()\n    const [review, setReview] = useState(oldReview.review)\n    const [stars,setStars] = useState(oldReview.stars)\n    const [validationErrors, setValidationErrors] = useState({\n        stars:'',\n        review:''\n    })\n\n    useEffect(() =>{\n        let tofill = async () => {\n            setReview(oldReview.review)\n            setStars(oldReview.stars)\n        }\n        tofill()\n    },[dispatch, id])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const toedit = {\n            review,\n            stars\n        }\n        const errors = {}\n        if (stars <= 0 || stars > 5) errors.stars = 'Reviews must have 1 to 5 stars';\n        if (!review.length) errors.review = 'Review is required';\n        if (!Object.values(errors).length){\n            const editedreview = await dispatch(edit_review_thunk(oldReview.id, toedit))\n            await dispatch(reviewMakerFunc(spotId))\n            await dispatch(setOneSpotDetails(spotId))\n            closeModal()\n        }else{\n            setValidationErrors(errors)\n        }\n    }\n    return (\n        <div className=\"sonmoda\">\n            <h1>Update your review?</h1>\n            <form onSubmit={handleSubmit}>\n                <label for=\"review\">\n                    <textarea\n                        name=\"review\"\n                        id=\"review\"\n                        cols=\"30\"\n                        rows=\"10\"\n                        placeholder=\"Leave your review here...\"\n                        onChange={(e) => setReview(e.target.value)}\n                    >\n                        {review}\n                    </textarea>\n                </label>\n                <span className='validationErrors'>{validationErrors.review}</span>\n                <div className='forTest'>\n                    <div class=\"rate\">\n                        <input\n                            type=\"radio\"\n                            id=\"star5\"\n                            name=\"rate\"\n                            value=\"5\"\n                            checked={stars === 5}\n                            onChange={() => setStars(5)}\n                        />\n                        <label for=\"star5\" title=\"text\">\n                            5 stars\n                        </label>\n                        <input\n                            type=\"radio\"\n                            id=\"star4\"\n                            name=\"rate\"\n                            value=\"4\"\n                            checked={stars === 4}\n                            onChange={() => setStars(4)}\n                        />\n                        <label for=\"star4\" title=\"text\">\n                            4 stars\n                        </label>\n                        <input\n                            type=\"radio\"\n                            id=\"star3\"\n                            name=\"rate\"\n                            value=\"3\"\n                            checked={stars === 3}\n                            onChange={() => setStars(3)}\n                        />\n                        <label for=\"star3\" title=\"text\">\n                            3 stars\n                        </label>\n                        <input\n                            type=\"radio\"\n                            id=\"star2\"\n                            name=\"rate\"\n                            value=\"2\"\n                            checked={stars === 2}\n                            onChange={() => setStars(2)}\n                        />\n                        <label for=\"star2\" title=\"text\">\n                            2 stars\n                        </label>\n                        <input\n                            type=\"radio\"\n                            id=\"star1\"\n                            name=\"rate\"\n                            value=\"1\"\n                            checked={stars === 1}\n                            onChange={() => setStars(1)}\n                        />\n                        <label for=\"star1\" title=\"text\">\n                            1 star\n                        </label>\n\n                    </div>\n                    <div style={{ marginTop: '18px' }}>Stars</div>\n                </div>\n                <span className='validationErrors'>{validationErrors.stars}</span>\n                <button\n                    className=\"submit-button\"\n                    type=\"submit\"\n                >\n                    Submit Your Review\n                </button>\n            </form>\n        </div>\n    )\n}","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Map/index.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/PageNotFound/index.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/Footer/index.js",["280"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/AboutAirWe/index.js",["281"],[],"import './index.css'\n\nexport default function AboutAirWe() {\n    return (\n        <section className='about-page-container' >\n            <div className='about-page-tile' >\n                <div>\n                    <img src=\"https://avatars.githubusercontent.com/u/98877088?v=4\" alt=\"Contributor Image\" />\n                    <h3>Vusal Layijov</h3>\n                </div>\n                <ul>\n                    <li><a href=\"https://www.linkedin.com/in/vusal-layijov-9a6181111/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></li>\n                    <li><a href=\"https://github.com/Vusal-Layijov\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></li>\n                </ul>\n            </div>\n        </section>\n    )\n}","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SetOneSpot/ImageGallery.js",["282"],[],"import SpotsMap from \"../Map\"\nimport './SetOneSpot.css'\nexport default function ImageGallery({images,spots}){\n    return (\n        <div className=\"single-spot-gallery\" >\n            <>\n            {images.map(img=> (\n                <div key={img.id} id={images.length===1 ? 'second':''} className={img.preview ? \"main-tile\":\"small-tile\"}>\n                    <img className=\"gallery-image-div\" src={img.url} />\n                </div>\n            ))\n\n            }\n            <div className=\"second-tile\" >\n                <SpotsMap spots={spots} />\n            </div>\n            </>\n        </div>\n    )\n}","/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/utils/mainutils.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/context/search.js",[],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/FilterSpots/index.js",["283","284","285","286"],[],"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/FilterSpots/FilteredSpots.js",["287","288"],[],{"ruleId":"289","severity":1,"message":"290","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":36},{"ruleId":"289","severity":1,"message":"293","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"294","line":8,"column":10,"nodeType":"291","messageId":"292","endLine":8,"endColumn":15},{"ruleId":"289","severity":1,"message":"295","line":10,"column":10,"nodeType":"291","messageId":"292","endLine":10,"endColumn":27},{"ruleId":"289","severity":1,"message":"296","line":17,"column":12,"nodeType":"291","messageId":"292","endLine":17,"endColumn":20},{"ruleId":"289","severity":1,"message":"297","line":17,"column":22,"nodeType":"291","messageId":"292","endLine":17,"endColumn":33},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"298","line":22,"column":7,"nodeType":"291","messageId":"292","endLine":22,"endColumn":17},{"ruleId":"289","severity":1,"message":"299","line":106,"column":13,"nodeType":"291","messageId":"292","endLine":106,"endColumn":18},{"ruleId":"289","severity":1,"message":"300","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":35},{"ruleId":"289","severity":1,"message":"294","line":3,"column":19,"nodeType":"291","messageId":"292","endLine":3,"endColumn":24},{"ruleId":"289","severity":1,"message":"301","line":3,"column":26,"nodeType":"291","messageId":"292","endLine":3,"endColumn":35},{"ruleId":"289","severity":1,"message":"302","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":16},{"ruleId":"303","severity":1,"message":"304","line":28,"column":25,"nodeType":"305","endLine":28,"endColumn":75},{"ruleId":"289","severity":1,"message":"294","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":15},{"ruleId":"289","severity":1,"message":"306","line":12,"column":8,"nodeType":"291","messageId":"292","endLine":12,"endColumn":11},{"ruleId":"289","severity":1,"message":"302","line":13,"column":8,"nodeType":"291","messageId":"292","endLine":13,"endColumn":16},{"ruleId":"307","severity":1,"message":"308","line":32,"column":5,"nodeType":"309","endLine":32,"endColumn":15,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":60,"column":37,"nodeType":"313","messageId":"314","endLine":60,"endColumn":39},{"ruleId":"311","severity":1,"message":"312","line":85,"column":42,"nodeType":"313","messageId":"314","endLine":85,"endColumn":44},{"ruleId":"311","severity":1,"message":"312","line":103,"column":40,"nodeType":"313","messageId":"314","endLine":103,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":19},{"ruleId":"289","severity":1,"message":"300","line":2,"column":21,"nodeType":"291","messageId":"292","endLine":2,"endColumn":29},{"ruleId":"289","severity":1,"message":"315","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"316","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":25},{"ruleId":"289","severity":1,"message":"317","line":10,"column":11,"nodeType":"291","messageId":"292","endLine":10,"endColumn":19},{"ruleId":"311","severity":1,"message":"312","line":40,"column":25,"nodeType":"313","messageId":"314","endLine":40,"endColumn":27},{"ruleId":"289","severity":1,"message":"318","line":5,"column":7,"nodeType":"291","messageId":"292","endLine":5,"endColumn":18},{"ruleId":"289","severity":1,"message":"319","line":55,"column":15,"nodeType":"291","messageId":"292","endLine":55,"endColumn":22},{"ruleId":"289","severity":1,"message":"320","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":19},{"ruleId":"289","severity":1,"message":"321","line":6,"column":36,"nodeType":"291","messageId":"292","endLine":6,"endColumn":42},{"ruleId":"289","severity":1,"message":"322","line":9,"column":3,"nodeType":"291","messageId":"292","endLine":9,"endColumn":19},{"ruleId":"289","severity":1,"message":"323","line":33,"column":9,"nodeType":"291","messageId":"292","endLine":33,"endColumn":22},{"ruleId":"289","severity":1,"message":"324","line":39,"column":9,"nodeType":"291","messageId":"292","endLine":39,"endColumn":20},{"ruleId":"289","severity":1,"message":"294","line":4,"column":19,"nodeType":"291","messageId":"292","endLine":4,"endColumn":24},{"ruleId":"289","severity":1,"message":"301","line":4,"column":26,"nodeType":"291","messageId":"292","endLine":4,"endColumn":35},{"ruleId":"289","severity":1,"message":"325","line":7,"column":10,"nodeType":"291","messageId":"292","endLine":7,"endColumn":24},{"ruleId":"303","severity":1,"message":"304","line":42,"column":35,"nodeType":"305","endLine":42,"endColumn":85},{"ruleId":"303","severity":1,"message":"304","line":75,"column":31,"nodeType":"305","endLine":75,"endColumn":89},{"ruleId":"289","severity":1,"message":"326","line":5,"column":10,"nodeType":"291","messageId":"292","endLine":5,"endColumn":21},{"ruleId":"289","severity":1,"message":"327","line":5,"column":23,"nodeType":"291","messageId":"292","endLine":5,"endColumn":46},{"ruleId":"289","severity":1,"message":"320","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":19},{"ruleId":"289","severity":1,"message":"321","line":6,"column":36,"nodeType":"291","messageId":"292","endLine":6,"endColumn":42},{"ruleId":"289","severity":1,"message":"322","line":9,"column":5,"nodeType":"291","messageId":"292","endLine":9,"endColumn":21},{"ruleId":"289","severity":1,"message":"328","line":33,"column":11,"nodeType":"291","messageId":"292","endLine":33,"endColumn":15},{"ruleId":"289","severity":1,"message":"329","line":35,"column":11,"nodeType":"291","messageId":"292","endLine":35,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":67,"column":41,"nodeType":"332","messageId":"333","endLine":67,"endColumn":43},{"ruleId":"307","severity":1,"message":"308","line":78,"column":8,"nodeType":"309","endLine":78,"endColumn":18,"suggestions":"334"},{"ruleId":"289","severity":1,"message":"335","line":101,"column":12,"nodeType":"291","messageId":"292","endLine":101,"endColumn":18},{"ruleId":"289","severity":1,"message":"336","line":102,"column":12,"nodeType":"291","messageId":"292","endLine":102,"endColumn":18},{"ruleId":"289","severity":1,"message":"337","line":103,"column":12,"nodeType":"291","messageId":"292","endLine":103,"endColumn":18},{"ruleId":"289","severity":1,"message":"323","line":109,"column":11,"nodeType":"291","messageId":"292","endLine":109,"endColumn":24},{"ruleId":"289","severity":1,"message":"300","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"316","line":5,"column":28,"nodeType":"291","messageId":"292","endLine":5,"endColumn":43},{"ruleId":"289","severity":1,"message":"290","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":19},{"ruleId":"289","severity":1,"message":"315","line":4,"column":23,"nodeType":"291","messageId":"292","endLine":4,"endColumn":34},{"ruleId":"289","severity":1,"message":"338","line":14,"column":12,"nodeType":"291","messageId":"292","endLine":14,"endColumn":22},{"ruleId":"289","severity":1,"message":"339","line":14,"column":24,"nodeType":"291","messageId":"292","endLine":14,"endColumn":37},{"ruleId":"289","severity":1,"message":"340","line":27,"column":11,"nodeType":"291","messageId":"292","endLine":27,"endColumn":27},{"ruleId":"289","severity":1,"message":"341","line":33,"column":19,"nodeType":"291","messageId":"292","endLine":33,"endColumn":32},{"ruleId":"289","severity":1,"message":"342","line":58,"column":20,"nodeType":"291","messageId":"292","endLine":58,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":79,"column":13,"nodeType":"305","endLine":79,"endColumn":52},{"ruleId":"289","severity":1,"message":"343","line":12,"column":7,"nodeType":"291","messageId":"292","endLine":12,"endColumn":28},{"ruleId":"289","severity":1,"message":"328","line":59,"column":9,"nodeType":"291","messageId":"292","endLine":59,"endColumn":13},{"ruleId":"289","severity":1,"message":"315","line":2,"column":23,"nodeType":"291","messageId":"292","endLine":2,"endColumn":34},{"ruleId":"289","severity":1,"message":"344","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":20},{"ruleId":"307","severity":1,"message":"345","line":27,"column":7,"nodeType":"309","endLine":27,"endColumn":21,"suggestions":"346"},{"ruleId":"289","severity":1,"message":"347","line":39,"column":19,"nodeType":"291","messageId":"292","endLine":39,"endColumn":31},{"ruleId":"289","severity":1,"message":"348","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":17},{"ruleId":"289","severity":1,"message":"349","line":2,"column":44,"nodeType":"291","messageId":"292","endLine":2,"endColumn":58},{"ruleId":"289","severity":1,"message":"350","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"315","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":34},{"ruleId":"289","severity":1,"message":"351","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":26},{"ruleId":"289","severity":1,"message":"352","line":6,"column":5,"nodeType":"291","messageId":"292","endLine":6,"endColumn":21},{"ruleId":"289","severity":1,"message":"322","line":7,"column":5,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"353","line":8,"column":5,"nodeType":"291","messageId":"292","endLine":8,"endColumn":14},{"ruleId":"289","severity":1,"message":"306","line":15,"column":10,"nodeType":"291","messageId":"292","endLine":15,"endColumn":13},{"ruleId":"289","severity":1,"message":"354","line":17,"column":12,"nodeType":"291","messageId":"292","endLine":17,"endColumn":19},{"ruleId":"289","severity":1,"message":"355","line":17,"column":21,"nodeType":"291","messageId":"292","endLine":17,"endColumn":31},{"ruleId":"289","severity":1,"message":"356","line":18,"column":12,"nodeType":"291","messageId":"292","endLine":18,"endColumn":23},{"ruleId":"289","severity":1,"message":"357","line":18,"column":25,"nodeType":"291","messageId":"292","endLine":18,"endColumn":39},{"ruleId":"289","severity":1,"message":"358","line":19,"column":12,"nodeType":"291","messageId":"292","endLine":19,"endColumn":27},{"ruleId":"311","severity":1,"message":"312","line":146,"column":24,"nodeType":"313","messageId":"314","endLine":146,"endColumn":26},{"ruleId":"307","severity":1,"message":"308","line":235,"column":6,"nodeType":"309","endLine":235,"endColumn":13,"suggestions":"359"},{"ruleId":"289","severity":1,"message":"360","line":11,"column":9,"nodeType":"291","messageId":"292","endLine":11,"endColumn":13},{"ruleId":"361","severity":1,"message":"362","line":8,"column":21,"nodeType":"305","endLine":8,"endColumn":111},{"ruleId":"303","severity":1,"message":"304","line":9,"column":21,"nodeType":"305","endLine":9,"endColumn":72},{"ruleId":"289","severity":1,"message":"300","line":1,"column":21,"nodeType":"291","messageId":"292","endLine":1,"endColumn":29},{"ruleId":"289","severity":1,"message":"363","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":17},{"ruleId":"289","severity":1,"message":"301","line":3,"column":19,"nodeType":"291","messageId":"292","endLine":3,"endColumn":28},{"ruleId":"289","severity":1,"message":"364","line":11,"column":27,"nodeType":"291","messageId":"292","endLine":11,"endColumn":42},{"ruleId":"289","severity":1,"message":"295","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":14,"column":37,"nodeType":"305","endLine":14,"endColumn":87},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CreateNewSpot' is defined but never used.","'Route' is defined but never used.","'setSpotsWithQuery' is defined but never used.","'openForm' is assigned a value but never used.","'setOpenForm' is assigned a value but never used.","'createSpot' is assigned a value but never used.","'image' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'SpotsMap' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Map' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotId'. Either include it or remove the dependency array.","ArrayExpression",["365"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'reviewMakerFunc' is defined but never used.","'dispatch' is assigned a value but never used.","'EDIT_REVIEW' is assigned a value but never used.","'details' is assigned a value but never used.","'GoogleMap' is defined but never used.","'Marker' is defined but never used.","'geocodeByPlaceId' is defined but never used.","'updateAddress' is assigned a value but never used.","'updateImage' is assigned a value but never used.","'removeSpotFunc' is defined but never used.","'setAllSpots' is defined but never used.","'setCurrentUserSpotsFunc' is defined but never used.","'spot' is assigned a value but never used.","'spotImages' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["366"],"'image1' is assigned a value but never used.","'image2' is assigned a value but never used.","'image3' is assigned a value but never used.","'submitting' is assigned a value but never used.","'setSubmitting' is assigned a value but never used.","'handleFormChange' is assigned a value but never used.","'formattedDate' is assigned a value but never used.","'errors' is assigned a value but never used.","'create_booking_action' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'oldReview.review' and 'oldReview.stars'. Either include them or remove the dependency array. If 'setReview' needs the current value of 'oldReview.review', you can also switch to useReducer instead of useState and read 'oldReview.review' in the reducer.",["367"],"'editedreview' is assigned a value but never used.","'useMemo' is defined but never used.","'useJsApiLoader' is defined but never used.","'useDispatch' is defined but never used.","'PlacesAutocomplete' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'coordinates' is assigned a value but never used.","'setCoordinates' is assigned a value but never used.","'currentPosition' is assigned a value but never used.",["368"],"'user' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'NavLink' is defined but never used.","'setSearchParams' is assigned a value but never used.",{"desc":"369","fix":"370"},{"desc":"369","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [dispatch, spotId]",{"range":"376","text":"377"},{"range":"378","text":"377"},"Update the dependencies array to be: [dispatch, id, oldReview.review, oldReview.stars]",{"range":"379","text":"380"},"Update the dependencies array to be: [spotId, spots]",{"range":"381","text":"382"},[1182,1192],"[dispatch, spotId]",[2628,2638],[950,964],"[dispatch, id, oldReview.review, oldReview.stars]",[7737,7744],"[spotId, spots]"]