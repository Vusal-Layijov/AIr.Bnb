{"ast":null,"code":"var _jsxFileName = \"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/OpenModalButton/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useModal } from '../../context/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpenModalButton(_ref) {\n  _s();\n  let {\n    modalComponent,\n    // component to render inside the modal\n    buttonText,\n    // text of the button that opens the modal\n    onButtonClick,\n    // optional: callback function that will be called once the button that opens the modal is clicked\n    onModalClose // optional: callback function that will be called once the modal is closed\n  } = _ref;\n  const {\n    setModalContent,\n    setOnModalClose\n  } = useModal();\n  const onClick = () => {\n    if (typeof onButtonClick === 'function') onButtonClick();\n    if (typeof onModalClose === 'function') setOnModalClose(onModalClose);\n    setModalContent(modalComponent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: buttonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(OpenModalButton, \"CYHkP+OX4/XADGVYFixIs9jJKu8=\", false, function () {\n  return [useModal];\n});\n_c = OpenModalButton;\nexport default OpenModalButton;\nvar _c;\n$RefreshReg$(_c, \"OpenModalButton\");","map":{"version":3,"names":["React","useModal","OpenModalButton","modalComponent","buttonText","onButtonClick","onModalClose","setModalContent","setOnModalClose","onClick"],"sources":["/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/OpenModalButton/index.js"],"sourcesContent":["import React from 'react';\nimport { useModal } from '../../context/Modal';\n\nfunction OpenModalButton({\n    modalComponent, // component to render inside the modal\n    buttonText, // text of the button that opens the modal\n    onButtonClick, // optional: callback function that will be called once the button that opens the modal is clicked\n    onModalClose // optional: callback function that will be called once the modal is closed\n}) {\n    const { setModalContent, setOnModalClose } = useModal();\n\n    const onClick = () => {\n        if (typeof onButtonClick === 'function') onButtonClick();\n        if (typeof onModalClose === 'function') setOnModalClose(onModalClose);\n        setModalContent(modalComponent);\n    };\n\n    return (\n        <button onClick={onClick}>{buttonText}</button>\n    );\n}\n\nexport default OpenModalButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAAC;AAE/C,SAASC,eAAe,OAKrB;EAAA;EAAA,IALsB;IACrBC,cAAc;IAAE;IAChBC,UAAU;IAAE;IACZC,aAAa;IAAE;IACfC,YAAY,CAAC;EACjB,CAAC;EACG,MAAM;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAGP,QAAQ,EAAE;EAEvD,MAAMQ,OAAO,GAAG,MAAM;IAClB,IAAI,OAAOJ,aAAa,KAAK,UAAU,EAAEA,aAAa,EAAE;IACxD,IAAI,OAAOC,YAAY,KAAK,UAAU,EAAEE,eAAe,CAACF,YAAY,CAAC;IACrEC,eAAe,CAACJ,cAAc,CAAC;EACnC,CAAC;EAED,oBACI;IAAQ,OAAO,EAAEM,OAAQ;IAAA,UAAEL;EAAU;IAAA;IAAA;IAAA;EAAA,QAAU;AAEvD;AAAC,GAjBQF,eAAe;EAAA,QAMyBD,QAAQ;AAAA;AAAA,KANhDC,eAAe;AAmBxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}