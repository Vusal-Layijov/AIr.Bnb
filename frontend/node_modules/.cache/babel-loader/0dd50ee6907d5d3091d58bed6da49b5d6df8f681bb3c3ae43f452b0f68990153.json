{"ast":null,"code":"var _jsxFileName = \"/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SignUpFormPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupFormPage() {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }, this);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(sessionActions.signup({\n        email,\n        username,\n        firstName,\n        lastName,\n        password\n      })).catch(async res => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n    }\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(SignupFormPage, \"3czHyt1OJNeh6hQDFX9W+U4FcFM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SignupFormPage;\nexport default SignupFormPage;\nvar _c;\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Redirect","sessionActions","SignupFormPage","dispatch","sessionUser","state","session","user","email","setEmail","username","setUsername","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","handleSubmit","e","preventDefault","signup","catch","res","data","json","map","error","idx","target","value"],"sources":["/Users/vusallayicov/Desktop/airbnb/authenticate-me/frontend/src/components/SignUpFormPage/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, username, firstName, lastName, password }))\n                .catch(async (res) => {\n                    const data = await res.json();\n                    if (data && data.errors) setErrors(data.errors);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Email\n                <input\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Username\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                First Name\n                <input\n                    type=\"text\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Last Name\n                <input\n                    type=\"text\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Confirm Password\n                <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Sign Up</button>\n        </form>\n    );\n}\n\nexport default SignupFormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}